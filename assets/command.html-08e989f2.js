import{_ as r,r as t,o as d,c as l,a as e,d as a,b as i,e as s}from"./app-7b5e955f.js";const c={},o=s(`<h1 id="git-命令" tabindex="-1"><a class="header-anchor" href="#git-命令" aria-hidden="true">#</a> Git 命令</h1><p>Git 是一个 “分布式版本管理工具”，简单的理解版本管理工具：大家在写东西的时候都用过 “回撤” 这个功能，但是回撤只能回撤几步，假如想要找回我三天之前的修改，光用 “回撤” 是找不回来的。而 “版本管理工具” 能记录每次的修改，只要提交到版本仓库，你就可以找到之前任何时刻的状态（文本状态）。</p><h2 id="展示帮助信息" tabindex="-1"><a class="header-anchor" href="#展示帮助信息" aria-hidden="true">#</a> 展示帮助信息</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token builtin class-name">help</span> <span class="token parameter variable">-g</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><p>The command output as below:</p><div class="language-none line-numbers-mode" data-ext="none"><pre class="language-none"><code>The common Git guides are:
   attributes          Defining attributes per path
   cli                 Git command-line interface and conventions
   core-tutorial       A Git core tutorial for developers
   cvs-migration       Git for CVS users
   diffcore            Tweaking diff output
   everyday            A useful minimum set of commands for Everyday Git
   glossary            A Git Glossary
   hooks               Hooks used by Git
   ignore              Specifies intentionally untracked files to ignore
   modules             Defining submodule properties
   namespaces          Git namespaces
   repository-layout    Git Repository Layout
   revisions           Specifying revisions and ranges for Git
   tutorial            A tutorial introduction to Git
   tutorial-2          A tutorial introduction to Git: part two
   workflows           An overview of recommended workflows with Git

&#39;git help -a&#39; and &#39;git help -g&#39; list available subcommands and some concept guides. See &#39;git help &lt;command&gt;&#39; or &#39;git help &lt;concept&gt;&#39; to read about a specific subcommand or concept.
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Copy</p><h2 id="回到远程仓库的状态" tabindex="-1"><a class="header-anchor" href="#回到远程仓库的状态" aria-hidden="true">#</a> 回到远程仓库的状态</h2><p>抛弃本地所有的修改，回到远程仓库的状态。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch <span class="token parameter variable">--all</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> reset <span class="token parameter variable">--hard</span> origin/master
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="重设第一个-commit" tabindex="-1"><a class="header-anchor" href="#重设第一个-commit" aria-hidden="true">#</a> 重设第一个 commit</h2><p>也就是把所有的改动都重新放回工作区，并<strong>清空所有的 commit</strong>，这样就可以重新提交第一个 commit 了</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> update-ref <span class="token parameter variable">-d</span> HEAD
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="查看冲突文件列表" tabindex="-1"><a class="header-anchor" href="#查看冲突文件列表" aria-hidden="true">#</a> 查看冲突文件列表</h2><p>展示工作区的冲突文件列表</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">diff</span> --name-only --diff-filter<span class="token operator">=</span>U
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示工作区和暂存区的不同" tabindex="-1"><a class="header-anchor" href="#展示工作区和暂存区的不同" aria-hidden="true">#</a> 展示工作区和暂存区的不同</h2><p>输出<strong>工作区</strong>和<strong>暂存区</strong>的 different (不同)。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">diff</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><p>还可以展示本地仓库中任意两个 commit 之间的文件变动：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">diff</span> <span class="token operator">&lt;</span>commit-id<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>commit-id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示暂存区和最近版本的不同" tabindex="-1"><a class="header-anchor" href="#展示暂存区和最近版本的不同" aria-hidden="true">#</a> 展示暂存区和最近版本的不同</h2><p>输出<strong>暂存区</strong>和本地最近的版本 (commit) 的 different (不同)。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">diff</span> <span class="token parameter variable">--cached</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示暂存区、工作区和最近版本的不同" tabindex="-1"><a class="header-anchor" href="#展示暂存区、工作区和最近版本的不同" aria-hidden="true">#</a> 展示暂存区、工作区和最近版本的不同</h2><p>输出<strong>工作区</strong>、<strong>暂存区</strong> 和本地最近的版本 (commit) 的 different (不同)。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">diff</span> HEAD
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="快速切换到上一个分支" tabindex="-1"><a class="header-anchor" href="#快速切换到上一个分支" aria-hidden="true">#</a> 快速切换到上一个分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout -
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="删除已经合并到-master-的分支" tabindex="-1"><a class="header-anchor" href="#删除已经合并到-master-的分支" aria-hidden="true">#</a> 删除已经合并到 master 的分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">--merged</span> master <span class="token operator">|</span> <span class="token function">grep</span> <span class="token parameter variable">-v</span> <span class="token string">&#39;^\\*\\|  master&#39;</span> <span class="token operator">|</span> <span class="token function">xargs</span> <span class="token parameter variable">-n</span> <span class="token number">1</span> <span class="token function">git</span> branch <span class="token parameter variable">-d</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示本地分支关联远程仓库的情况" tabindex="-1"><a class="header-anchor" href="#展示本地分支关联远程仓库的情况" aria-hidden="true">#</a> 展示本地分支关联远程仓库的情况</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">-vv</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="关联远程分支" tabindex="-1"><a class="header-anchor" href="#关联远程分支" aria-hidden="true">#</a> 关联远程分支</h2><p>关联之后，<code>git branch -vv</code> 就可以展示关联的远程分支名了，同时推送到远程仓库直接：<code>git push</code>，不需要指定远程仓库了。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">-u</span> origin/mybranch
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><p>或者在 push 时加上 <code>-u</code> 参数</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin/mybranch <span class="token parameter variable">-u</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="列出所有远程分支" tabindex="-1"><a class="header-anchor" href="#列出所有远程分支" aria-hidden="true">#</a> 列出所有远程分支</h2><p>-r 参数相当于：remote</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">-r</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="列出本地和远程分支" tabindex="-1"><a class="header-anchor" href="#列出本地和远程分支" aria-hidden="true">#</a> 列出本地和远程分支</h2><p>-a 参数相当于：all</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="查看远程分支和本地分支的对应关系" tabindex="-1"><a class="header-anchor" href="#查看远程分支和本地分支的对应关系" aria-hidden="true">#</a> 查看远程分支和本地分支的对应关系</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote show origin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="远程删除了分支本地也想删除" tabindex="-1"><a class="header-anchor" href="#远程删除了分支本地也想删除" aria-hidden="true">#</a> 远程删除了分支本地也想删除</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote prune origin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="创建并切换到本地分支" tabindex="-1"><a class="header-anchor" href="#创建并切换到本地分支" aria-hidden="true">#</a> 创建并切换到本地分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="从远程分支中创建并切换到本地分支" tabindex="-1"><a class="header-anchor" href="#从远程分支中创建并切换到本地分支" aria-hidden="true">#</a> 从远程分支中创建并切换到本地分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> <span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span> origin/<span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="删除本地分支" tabindex="-1"><a class="header-anchor" href="#删除本地分支" aria-hidden="true">#</a> 删除本地分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">-d</span> <span class="token operator">&lt;</span>local-branchname<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="删除远程分支" tabindex="-1"><a class="header-anchor" href="#删除远程分支" aria-hidden="true">#</a> 删除远程分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> <span class="token operator">&lt;</span>remote-branchname<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><p>或者</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin :<span class="token operator">&lt;</span>remote-branchname<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="重命名本地分支" tabindex="-1"><a class="header-anchor" href="#重命名本地分支" aria-hidden="true">#</a> 重命名本地分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> branch <span class="token parameter variable">-m</span> <span class="token operator">&lt;</span>new-branch-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="查看标签" tabindex="-1"><a class="header-anchor" href="#查看标签" aria-hidden="true">#</a> 查看标签</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><p>展示当前分支的最近的 tag</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> describe <span class="token parameter variable">--tags</span> <span class="token parameter variable">--abbrev</span><span class="token operator">=</span><span class="token number">0</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="查看标签详细信息" tabindex="-1"><a class="header-anchor" href="#查看标签详细信息" aria-hidden="true">#</a> 查看标签详细信息</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag <span class="token parameter variable">-ln</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="本地创建标签" tabindex="-1"><a class="header-anchor" href="#本地创建标签" aria-hidden="true">#</a> 本地创建标签</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag <span class="token operator">&lt;</span>version-number<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><p>默认 tag 是打在最近的一次 commit 上，如果需要指定 commit 打 tag：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> tag <span class="token parameter variable">-a</span> <span class="token operator">&lt;</span>version-number<span class="token operator">&gt;</span> <span class="token parameter variable">-m</span> <span class="token string">&quot;v1.0 发布(描述)&quot;</span> <span class="token operator">&lt;</span>commit-id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="推送标签到远程仓库" tabindex="-1"><a class="header-anchor" href="#推送标签到远程仓库" aria-hidden="true">#</a> 推送标签到远程仓库</h2><p>首先要保证本地创建好了标签才可以推送标签到远程仓库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin <span class="token operator">&lt;</span>local-version-number<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><p>一次性推送所有标签，同步到远程仓库：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin <span class="token parameter variable">--tags</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="删除本地标签" tabindex="-1"><a class="header-anchor" href="#删除本地标签" aria-hidden="true">#</a> 删除本地标签</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> tag <span class="token parameter variable">-d</span> <span class="token operator">&lt;</span>tag-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="删除远程标签" tabindex="-1"><a class="header-anchor" href="#删除远程标签" aria-hidden="true">#</a> 删除远程标签</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push origin <span class="token parameter variable">--delete</span> tag <span class="token operator">&lt;</span>tagname<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="切回到某个标签" tabindex="-1"><a class="header-anchor" href="#切回到某个标签" aria-hidden="true">#</a> 切回到某个标签</h2><p>一般上线之前都会打 tag，就是为了防止上线后出现问题，方便快速回退到上一版本。下面的命令是回到某一标签下的状态：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token parameter variable">-b</span> branch_name tag_name
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="放弃工作区的修改" tabindex="-1"><a class="header-anchor" href="#放弃工作区的修改" aria-hidden="true">#</a> 放弃工作区的修改</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token operator">&lt;</span>file-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><p>放弃所有修改：</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="恢复删除的文件" tabindex="-1"><a class="header-anchor" href="#恢复删除的文件" aria-hidden="true">#</a> 恢复删除的文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> rev-list <span class="token parameter variable">-n</span> <span class="token number">1</span> HEAD -- <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span> <span class="token comment">#得到 deleting_commit</span>

<span class="token function">git</span> checkout <span class="token operator">&lt;</span>deleting_commit<span class="token operator">&gt;</span>^ -- <span class="token operator">&lt;</span>file_path<span class="token operator">&gt;</span> <span class="token comment">#回到删除文件 deleting_commit 之前的状态</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Copy</p><h2 id="以新增一个-commit-的方式还原某一个-commit-的修改" tabindex="-1"><a class="header-anchor" href="#以新增一个-commit-的方式还原某一个-commit-的修改" aria-hidden="true">#</a> 以新增一个 commit 的方式还原某一个 commit 的修改</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> revert <span class="token operator">&lt;</span>commit-id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="回到某个-commit-的状态-并删除后面的-commit" tabindex="-1"><a class="header-anchor" href="#回到某个-commit-的状态-并删除后面的-commit" aria-hidden="true">#</a> 回到某个 commit 的状态，并删除后面的 commit</h2><p>和 revert 的区别：reset 命令会抹去某个 commit id 之后的所有 commit</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reset <span class="token operator">&lt;</span>commit-id<span class="token operator">&gt;</span>  <span class="token comment">#默认就是-mixed参数。</span>

<span class="token function">git</span> reset <span class="token parameter variable">--mixed</span> HEAD^  <span class="token comment">#回退至上个版本，它将重置HEAD到另外一个commit,并且重置暂存区以便和HEAD相匹配，但是也到此为止。工作区不会被更改。</span>

<span class="token function">git</span> reset <span class="token parameter variable">--soft</span> HEAD~3  <span class="token comment">#回退至三个版本之前，只回退了commit的信息，暂存区和工作区与回退之前保持一致。如果还要提交，直接commit即可</span>

<span class="token function">git</span> reset <span class="token parameter variable">--hard</span> <span class="token operator">&lt;</span>commit-id<span class="token operator">&gt;</span>  <span class="token comment">#彻底回退到指定commit-id的状态，暂存区和工作区也会变为指定commit-id版本的内容</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Copy</p><h2 id="修改上一个-commit-的描述" tabindex="-1"><a class="header-anchor" href="#修改上一个-commit-的描述" aria-hidden="true">#</a> 修改上一个 commit 的描述</h2><p>如果暂存区有改动，同时也会将暂存区的改动提交到上一个 commit</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">--amend</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="查看-commit-历史" tabindex="-1"><a class="header-anchor" href="#查看-commit-历史" aria-hidden="true">#</a> 查看 commit 历史</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> log
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="查看某段代码是谁写的" tabindex="-1"><a class="header-anchor" href="#查看某段代码是谁写的" aria-hidden="true">#</a> 查看某段代码是谁写的</h2><p>blame 的意思为‘责怪’，你懂的。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> blame <span class="token operator">&lt;</span>file-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="显示本地更新过-head-的-git-命令记录" tabindex="-1"><a class="header-anchor" href="#显示本地更新过-head-的-git-命令记录" aria-hidden="true">#</a> 显示本地更新过 HEAD 的 git 命令记录</h2><p>每次更新了 HEAD 的 git 命令比如 commit、amend、cherry-pick、reset、revert 等都会被记录下来（不限分支），就像 shell 的 history 一样。<br> 这样你可以 reset 到任何一次更新了 HEAD 的操作之后，而不仅仅是回到当前分支下的某个 commit 之后的状态。</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reflog
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="修改作者名" tabindex="-1"><a class="header-anchor" href="#修改作者名" aria-hidden="true">#</a> 修改作者名</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> commit <span class="token parameter variable">--amend</span> <span class="token parameter variable">--author</span><span class="token operator">=</span><span class="token string">&#39;Author Name &lt;email@address.com&gt;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="修改远程仓库的-url" tabindex="-1"><a class="header-anchor" href="#修改远程仓库的-url" aria-hidden="true">#</a> 修改远程仓库的 url</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote set-url origin <span class="token operator">&lt;</span>URL<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="增加远程仓库" tabindex="-1"><a class="header-anchor" href="#增加远程仓库" aria-hidden="true">#</a> 增加远程仓库</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote <span class="token function">add</span> origin <span class="token operator">&lt;</span>remote-url<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="列出所有远程仓库" tabindex="-1"><a class="header-anchor" href="#列出所有远程仓库" aria-hidden="true">#</a> 列出所有远程仓库</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> remote
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="查看两个星期内的改动" tabindex="-1"><a class="header-anchor" href="#查看两个星期内的改动" aria-hidden="true">#</a> 查看两个星期内的改动</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> whatchanged <span class="token parameter variable">--since</span><span class="token operator">=</span><span class="token string">&#39;2 weeks ago&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="把-a-分支的某一个-commit-放到-b-分支上" tabindex="-1"><a class="header-anchor" href="#把-a-分支的某一个-commit-放到-b-分支上" aria-hidden="true">#</a> 把 A 分支的某一个 commit，放到 B 分支上</h2>`,162),p=e("code",null,"cherry-pick",-1),h={href:"http://sg552.iteye.com/blog/1300713#bc2367928",target:"_blank",rel:"noopener noreferrer"},u=s(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span> <span class="token operator">&amp;&amp;</span> <span class="token function">git</span> cherry-pick <span class="token operator">&lt;</span>commit-id<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="给-git-命令起别名" tabindex="-1"><a class="header-anchor" href="#给-git-命令起别名" aria-hidden="true">#</a> 给 git 命令起别名</h2><p>简化命令</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> alias.<span class="token operator">&lt;</span>handle<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>command<span class="token operator">&gt;</span>

比如：git status 改成 <span class="token function">git</span> st，这样可以简化命令

<span class="token function">git</span> config <span class="token parameter variable">--global</span> alias.st status
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Copy</p><h2 id="存储当前的修改-但不用提交-commit" tabindex="-1"><a class="header-anchor" href="#存储当前的修改-但不用提交-commit" aria-hidden="true">#</a> 存储当前的修改，但不用提交 commit</h2>`,7),m={href:"http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/00137602359178794d966923e5c4134bc8bf98dfb03aea3000",target:"_blank",rel:"noopener noreferrer"},b=s(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> stash
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="保存当前状态-包括-untracked-的文件" tabindex="-1"><a class="header-anchor" href="#保存当前状态-包括-untracked-的文件" aria-hidden="true">#</a> 保存当前状态，包括 untracked 的文件</h2><p>untracked 文件：新建的文件</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> stash <span class="token parameter variable">-u</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示所有-stashes" tabindex="-1"><a class="header-anchor" href="#展示所有-stashes" aria-hidden="true">#</a> 展示所有 stashes</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> stash list
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="回到某个-stash-的状态" tabindex="-1"><a class="header-anchor" href="#回到某个-stash-的状态" aria-hidden="true">#</a> 回到某个 stash 的状态</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> stash apply <span class="token operator">&lt;</span>stash@<span class="token punctuation">{</span>n<span class="token punctuation">}</span><span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="回到最后一个-stash-的状态-并删除这个-stash" tabindex="-1"><a class="header-anchor" href="#回到最后一个-stash-的状态-并删除这个-stash" aria-hidden="true">#</a> 回到最后一个 stash 的状态，并删除这个 stash</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> stash pop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="删除所有的-stash" tabindex="-1"><a class="header-anchor" href="#删除所有的-stash" aria-hidden="true">#</a> 删除所有的 stash</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> stash <span class="token function">clear</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="从-stash-中拿出某个文件的修改" tabindex="-1"><a class="header-anchor" href="#从-stash-中拿出某个文件的修改" aria-hidden="true">#</a> 从 stash 中拿出某个文件的修改</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token operator">&lt;</span>stash@<span class="token punctuation">{</span>n<span class="token punctuation">}</span><span class="token operator">&gt;</span> -- <span class="token operator">&lt;</span>file-path<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示所有-tracked-的文件" tabindex="-1"><a class="header-anchor" href="#展示所有-tracked-的文件" aria-hidden="true">#</a> 展示所有 tracked 的文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> ls-files <span class="token parameter variable">-t</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示所有-untracked-的文件" tabindex="-1"><a class="header-anchor" href="#展示所有-untracked-的文件" aria-hidden="true">#</a> 展示所有 untracked 的文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> ls-files <span class="token parameter variable">--others</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示所有忽略的文件" tabindex="-1"><a class="header-anchor" href="#展示所有忽略的文件" aria-hidden="true">#</a> 展示所有忽略的文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> ls-files <span class="token parameter variable">--others</span> <span class="token parameter variable">-i</span> --exclude-standard
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="强制删除-untracked-的文件" tabindex="-1"><a class="header-anchor" href="#强制删除-untracked-的文件" aria-hidden="true">#</a> 强制删除 untracked 的文件</h2><p>可以用来删除新建的文件。如果不指定文件文件名，则清空所有工作的 untracked 文件。<code>clean</code> 命令，<strong>注意两点</strong>：</p><ol><li>clean 后，删除的文件无法找回</li><li>不会影响 tracked 的文件的改动，只会删除 untracked 的文件</li></ol><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clean <span class="token operator">&lt;</span>file-name<span class="token operator">&gt;</span> <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="强制删除-untracked-的目录" tabindex="-1"><a class="header-anchor" href="#强制删除-untracked-的目录" aria-hidden="true">#</a> 强制删除 untracked 的目录</h2><p>可以用来删除新建的目录，<strong>注意</strong>:这个命令也可以用来删除 untracked 的文件。详情见上一条</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clean <span class="token operator">&lt;</span>directory-name<span class="token operator">&gt;</span> <span class="token parameter variable">-df</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示简化的-commit-历史" tabindex="-1"><a class="header-anchor" href="#展示简化的-commit-历史" aria-hidden="true">#</a> 展示简化的 commit 历史</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> log <span class="token parameter variable">--pretty</span><span class="token operator">=</span>oneline <span class="token parameter variable">--graph</span> <span class="token parameter variable">--decorate</span> <span class="token parameter variable">--all</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="把某一个分支到导出成一个文件" tabindex="-1"><a class="header-anchor" href="#把某一个分支到导出成一个文件" aria-hidden="true">#</a> 把某一个分支到导出成一个文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> bundle create <span class="token operator">&lt;</span>file<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="从包中导入分支" tabindex="-1"><a class="header-anchor" href="#从包中导入分支" aria-hidden="true">#</a> 从包中导入分支</h2><p>新建一个分支，分支内容就是上面 <code>git bundle create</code> 命令导出的内容</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone repo.bundle <span class="token operator">&lt;</span>repo-dir<span class="token operator">&gt;</span> <span class="token parameter variable">-b</span> <span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="执行-rebase-之前自动-stash" tabindex="-1"><a class="header-anchor" href="#执行-rebase-之前自动-stash" aria-hidden="true">#</a> 执行 rebase 之前自动 stash</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> rebase <span class="token parameter variable">--autostash</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="从远程仓库根据-id-拉下某一状态-到本地分支" tabindex="-1"><a class="header-anchor" href="#从远程仓库根据-id-拉下某一状态-到本地分支" aria-hidden="true">#</a> 从远程仓库根据 ID，拉下某一状态，到本地分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> fetch origin pull/<span class="token operator">&lt;</span>id<span class="token operator">&gt;</span>/head:<span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="详细展示一行中的修改" tabindex="-1"><a class="header-anchor" href="#详细展示一行中的修改" aria-hidden="true">#</a> 详细展示一行中的修改</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> <span class="token function">diff</span> --word-diff
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="清除-gitignore-文件中记录的文件" tabindex="-1"><a class="header-anchor" href="#清除-gitignore-文件中记录的文件" aria-hidden="true">#</a> 清除 gitignore 文件中记录的文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clean <span class="token parameter variable">-X</span> <span class="token parameter variable">-f</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示所有-alias-和-configs" tabindex="-1"><a class="header-anchor" href="#展示所有-alias-和-configs" aria-hidden="true">#</a> 展示所有 alias 和 configs</h2><p><strong>注意：</strong> config 分为：当前目录（local）和全局（golbal）的 config，默认为当前目录的 config</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--local</span> <span class="token parameter variable">--list</span> <span class="token punctuation">(</span>当前目录<span class="token punctuation">)</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--list</span> <span class="token punctuation">(</span>全局<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示忽略的文件" tabindex="-1"><a class="header-anchor" href="#展示忽略的文件" aria-hidden="true">#</a> 展示忽略的文件</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> status <span class="token parameter variable">--ignored</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="commit-历史中显示-branch1-有的-但是-branch2-没有-commit" tabindex="-1"><a class="header-anchor" href="#commit-历史中显示-branch1-有的-但是-branch2-没有-commit" aria-hidden="true">#</a> commit 历史中显示 Branch1 有的，但是 Branch2 没有 commit</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> log Branch1 ^Branch2
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="在-commit-log-中显示-gpg-签名" tabindex="-1"><a class="header-anchor" href="#在-commit-log-中显示-gpg-签名" aria-hidden="true">#</a> 在 commit log 中显示 GPG 签名</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> log --show-signature
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="删除全局设置" tabindex="-1"><a class="header-anchor" href="#删除全局设置" aria-hidden="true">#</a> 删除全局设置</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> <span class="token parameter variable">--unset</span> <span class="token operator">&lt;</span>entry-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="新建并切换到新分支上-同时这个分支没有任何-commit" tabindex="-1"><a class="header-anchor" href="#新建并切换到新分支上-同时这个分支没有任何-commit" aria-hidden="true">#</a> 新建并切换到新分支上，同时这个分支没有任何 commit</h2><p>相当于保存修改，但是重写 commit 历史</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> checkout <span class="token parameter variable">--orphan</span> <span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="展示任意分支某一文件的内容" tabindex="-1"><a class="header-anchor" href="#展示任意分支某一文件的内容" aria-hidden="true">#</a> 展示任意分支某一文件的内容</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> show <span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span>:<span class="token operator">&lt;</span>file-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="clone-下来指定的单一分支" tabindex="-1"><a class="header-anchor" href="#clone-下来指定的单一分支" aria-hidden="true">#</a> clone 下来指定的单一分支</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">-b</span> <span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span> --single-branch https://github.com/user/repo.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="clone-最新一次提交" tabindex="-1"><a class="header-anchor" href="#clone-最新一次提交" aria-hidden="true">#</a> clone 最新一次提交</h2><p>只会 clone 最近一次提交，将减少 clone 时间</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> clone <span class="token parameter variable">--depth</span><span class="token operator">=</span><span class="token number">1</span> https://github.com/user/repo.git
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="忽略某个文件的改动" tabindex="-1"><a class="header-anchor" href="#忽略某个文件的改动" aria-hidden="true">#</a> 忽略某个文件的改动</h2><p>关闭 track 指定文件的改动，也就是 Git 将不会在记录这个文件的改动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> update-index --assume-unchanged path/to/file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><p>恢复 track 指定文件的改动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> update-index --no-assume-unchanged path/to/file
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="忽略文件的权限变化" tabindex="-1"><a class="header-anchor" href="#忽略文件的权限变化" aria-hidden="true">#</a> 忽略文件的权限变化</h2><p>不再将文件的权限变化视作改动</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config core.fileMode <span class="token boolean">false</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="以最后提交的顺序列出所有-git-分支" tabindex="-1"><a class="header-anchor" href="#以最后提交的顺序列出所有-git-分支" aria-hidden="true">#</a> 以最后提交的顺序列出所有 Git 分支</h2><p>最新的放在最上面</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> for-each-ref <span class="token parameter variable">--sort</span><span class="token operator">=</span>-committerdate <span class="token parameter variable">--format</span><span class="token operator">=</span><span class="token string">&#39;%(refname:short)&#39;</span> refs/heads/
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="在-commit-log-中查找相关内容" tabindex="-1"><a class="header-anchor" href="#在-commit-log-中查找相关内容" aria-hidden="true">#</a> 在 commit log 中查找相关内容</h2><p>通过 grep 查找，given-text：所需要查找的字段</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> log <span class="token parameter variable">--all</span> <span class="token parameter variable">--grep</span><span class="token operator">=</span><span class="token string">&#39;&lt;given-text&gt;&#39;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="把暂存区的指定-file-放到工作区中" tabindex="-1"><a class="header-anchor" href="#把暂存区的指定-file-放到工作区中" aria-hidden="true">#</a> 把暂存区的指定 file 放到工作区中</h2><p>不添加参数，默认是 <code>-mixed</code></p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> reset <span class="token operator">&lt;</span>file-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="强制推送" tabindex="-1"><a class="header-anchor" href="#强制推送" aria-hidden="true">#</a> 强制推送</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> push <span class="token parameter variable">-f</span> <span class="token operator">&lt;</span>remote-name<span class="token operator">&gt;</span> <span class="token operator">&lt;</span>branch-name<span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>Copy</p><h2 id="git-配置-http-和-socks-代理" tabindex="-1"><a class="header-anchor" href="#git-配置-http-和-socks-代理" aria-hidden="true">#</a> git 配置 http 和 socks 代理</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">git</span> config <span class="token parameter variable">--global</span> https.proxy <span class="token string">&#39;http://127.0.0.1:8001&#39;</span>   <span class="token comment"># 适用于 privoxy 将 socks 协议转为 http 协议的 http 端口</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> http.proxy <span class="token string">&#39;http://127.0.0.1:8001&#39;</span>
<span class="token function">git</span> config <span class="token parameter variable">--global</span> socks.proxy <span class="token string">&quot;127.0.0.1:1080&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Copy</p><h2 id="git-配置-ssh-代理" tabindex="-1"><a class="header-anchor" href="#git-配置-ssh-代理" aria-hidden="true">#</a> git 配置 ssh 代理</h2><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">cat</span> ~/.ssh/config
Host gitlab.com
ProxyCommand <span class="token function">nc</span> <span class="token parameter variable">-X</span> <span class="token number">5</span> <span class="token parameter variable">-x</span> <span class="token number">127.0</span>.0.1:1080 %h %p    <span class="token comment"># 直接使用 shadowsocks 提供的 socks5 代理端口</span>

Host github.com
ProxyCommand <span class="token function">nc</span> <span class="token parameter variable">-X</span> <span class="token number">5</span> <span class="token parameter variable">-x</span> <span class="token number">127.0</span>.0.1:1080 %h %p
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,122);function v(g,k){const n=t("ExternalLinkIcon");return d(),l("div",null,[o,e("p",null,[a("这个过程需要 "),p,a(" 命令，"),e("a",h,[a("参考"),i(n)])]),u,e("p",null,[a("详解可以参考"),e("a",m,[a("廖雪峰老师的 git 教程"),i(n)])]),b])}const x=r(c,[["render",v],["__file","command.html.vue"]]);export{x as default};
