import{_ as i,r as l,o as d,c,a as e,b as a,w as t,d as n,e as o}from"./app-0530136c.js";const p={},u=o('<h1 id="移动机器人项目" tabindex="-1"><a class="header-anchor" href="#移动机器人项目" aria-hidden="true">#</a> 移动机器人项目</h1><ul><li><a href="#%E7%A7%BB%E5%8A%A8%E6%9C%BA%E5%99%A8%E4%BA%BA%E9%A1%B9%E7%9B%AE">移动机器人项目</a><ul><li><a href="#%E5%AE%9E%E7%8E%B0%E5%8A%9F%E8%83%BD">实现功能</a></li><li><a href="#%E6%96%87%E6%A1%A3">文档</a></li><li><a href="#%E6%A8%A1%E5%9D%97">模块</a></li><li><a href="#%E5%BC%80%E5%8F%91%E6%89%8B%E5%86%8C">开发手册</a><ul><li><a href="#%E4%BB%A3%E7%A0%81%E5%8A%A0%E5%AF%86">代码加密</a></li><li><a href="#git-%E5%8D%8F%E5%90%8C">git 协同</a></li></ul></li></ul></li></ul><h2 id="实现功能" tabindex="-1"><a class="header-anchor" href="#实现功能" aria-hidden="true">#</a> 实现功能</h2><h2 id="文档" tabindex="-1"><a class="header-anchor" href="#文档" aria-hidden="true">#</a> 文档</h2>',4),h={href:"http://dev.ros2.fishros.com",target:"_blank",rel:"noopener noreferrer"},v=e("h2",{id:"模块",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#模块","aria-hidden":"true"},"#"),n(" 模块")],-1),k=e("blockquote",null,[e("p",null,[e("strong",null,"需要注意的是"),n("：每一个模块都是一个单独的项目，里面包含的代码需要在各自的目录下运行，而不是总项目下，否则会报错。例如车道线检测项目，需要在 "),e("code",null,"modules/lane-detection"),n(" 目录下运行，或者用编辑器/IDE打开 "),e("code",null,"modules/lane-detection"),n(" 目录后，在目录内运行。 视觉算法")])],-1),m=e("p",null,"小车控制",-1),f=o('<h2 id="开发手册" tabindex="-1"><a class="header-anchor" href="#开发手册" aria-hidden="true">#</a> 开发手册</h2><h3 id="代码加密" tabindex="-1"><a class="header-anchor" href="#代码加密" aria-hidden="true">#</a> 代码加密</h3><h3 id="git-协同" tabindex="-1"><a class="header-anchor" href="#git-协同" aria-hidden="true">#</a> git 协同</h3><p>项目分支管理如下</p>',4),_=e("li",null,[e("code",null,"main"),n(": 主分支。设置了保护规则，不允许直接推送")],-1),g=e("li",null,[e("code",null,"dev"),n(": 开发分支，确认无误后，合并进 "),e("code",null,"main"),n(" 分支")],-1),b=e("code",null,"feat-*",-1),E=e("code",null,"feat-lanedetect",-1),x=e("code",null,"dev",-1),A=e("code",null,"feat-lane_detection",-1),B=e("code",null,"feat-ros2",-1),R=o(`<p>在使用 git 提交代码 (<code>git commit</code>) 时，需要遵循以下规范</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>🎉 initial: Start an adventure <span class="token operator">&lt;</span> 新开项目，初次提交 Begin a project. <span class="token operator">&gt;</span>
✨ feat:        <span class="token operator">&lt;</span> 引入新功能 Introduce new features. <span class="token operator">&gt;</span>
💡 feat:        <span class="token operator">&lt;</span> 引入新功能 Introduce new features. <span class="token operator">&gt;</span>
🪶 feat:        <span class="token operator">&lt;</span> 引入新功能 Introduce new features. <span class="token operator">&gt;</span>
🚧 fix:         <span class="token operator">&lt;</span> Fix a bug <span class="token operator">&gt;</span>
🐛 fix:         <span class="token operator">&lt;</span> Fix a bug <span class="token operator">&gt;</span>
⬆️ dependencies:<span class="token operator">&lt;</span> 更新依赖版本 Upgrade dependencies. <span class="token operator">&gt;</span>
⬇️ dependencies:<span class="token operator">&lt;</span> 降低依赖版本 Downgrade dependencies. <span class="token operator">&gt;</span>
📌 dependencies:<span class="token operator">&lt;</span> 固定依赖版本 Pin dependencies to specific versions. <span class="token operator">&gt;</span>
🚑️ hotfix:      <span class="token operator">&lt;</span> 重要补丁 Critical hotfix. <span class="token operator">&gt;</span>
📦 chore:       <span class="token operator">&lt;</span> 构建过程或辅助工具的变动 / 其他修改（不在上述类型中的修改） <span class="token operator">&gt;</span>
🎨 style:       <span class="token operator">&lt;</span> 代码格式修改 Improve structure / <span class="token function">format</span> of the code. <span class="token operator">&gt;</span> 
📝 docs:        <span class="token operator">&lt;</span> 修改文档 Add or update documentation. <span class="token operator">&gt;</span> 
🛠 build:       <span class="token operator">&lt;</span> 影响项目构建或依赖项修改 <span class="token operator">&gt;</span>
🚀 perf:        <span class="token operator">&lt;</span> 不影响代码内部行为的前提下，优化程序性能 Improve performance.  <span class="token operator">&gt;</span> 
🔨 refactor:    <span class="token operator">&lt;</span> 代码重构（重构，在不影响代码内部行为、功能下的代码修改） <span class="token operator">&gt;</span>
🔬 test:        <span class="token operator">&lt;</span> 测试用例新增、修改 Add, update, or pass tests. <span class="token operator">&gt;</span>
✅ release:     <span class="token operator">&lt;</span> 发布新版本 <span class="token operator">&gt;</span>
🔄 workflow:    <span class="token operator">&lt;</span> 工作流相关文件修改 <span class="token operator">&gt;</span>
🔀 merge:       <span class="token operator">&lt;</span> 合并分支 Merge branches. <span class="token operator">&gt;</span>
⏪️ revert:      <span class="token operator">&lt;</span> 恢复更改 Revert changes. <span class="token operator">&gt;</span>
⏳ revert:      <span class="token operator">&lt;</span> 恢复上一次提交 <span class="token operator">&gt;</span>
🔖 tag:         <span class="token operator">&lt;</span> 发布版本 Release / Version tags. <span class="token operator">&gt;</span>

📦 chore: update <span class="token variable"><span class="token variable">\`</span>.gitignore<span class="token variable">\`</span></span>
🚚 chore: move/rename <span class="token function">file</span> <span class="token operator">&lt;</span> 移动或重命名文件 <span class="token operator">&gt;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,2);function w(I,N){const s=l("RouterLink"),r=l("ExternalLinkIcon");return d(),c("div",null,[u,e("ul",null,[e("li",null,[a(s,{to:"/docs/git/git.html"},{default:t(()=>[n("git")]),_:1})]),e("li",null,[a(s,{to:"/docs/Jetson/"},{default:t(()=>[n("Jetson Nano")]),_:1})]),e("li",null,[e("a",h,[n("ROS2 中文网"),a(r)])])]),v,k,e("ul",null,[e("li",null,[a(s,{to:"/modules/lane-detection/"},{default:t(()=>[n("车道线检测（深度学习）")]),_:1})]),e("li",null,[a(s,{to:"/modules/lane-detection-cv/"},{default:t(()=>[n("车道线检测（传统方法）")]),_:1})]),e("li",null,[a(s,{to:"/modules/object-detection/"},{default:t(()=>[n("目标检测")]),_:1})])]),m,e("ul",null,[e("li",null,[a(s,{to:"/modules/jetson-ros2/"},{default:t(()=>[n("Jetson ROS2")]),_:1}),n(": 在 Jetson Nano 上安装 ROS2")])]),f,e("ul",null,[_,g,e("li",null,[b,n(": 新模块开发，例如 "),E,n(" 表示车道线检测分支，该功能开发完成后，合并进入 "),x,n(" 分支。已有分支如下 "),e("ul",null,[e("li",null,[A,n(": 车道线检测开发分支，对应"),a(s,{to:"/modules/lane-detection/"},{default:t(()=>[n("文档")]),_:1})]),e("li",null,[B,n(": JetsonNano + ROS2分支，对应"),a(s,{to:"/modules/jetson-ros2/"},{default:t(()=>[n("文档")]),_:1}),n("。该分支只包含将 ROS2 安装在 Jetson Nano 上的部分，和一系列安装环境的 Dockefile 的编写，不包含任何部署代码")])])])]),R])}const S=i(p,[["render",w],["__file","index.html.vue"]]);export{S as default};
