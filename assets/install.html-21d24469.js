import{_ as o,r as l,o as r,c as i,a as n,d as s,b as e,e as t}from"./app-0530136c.js";const c={},p=n("h1",{id:"tensorrt-环境",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#tensorrt-环境","aria-hidden":"true"},"#"),s(" TensorRT 环境")],-1),d=n("blockquote",null,[n("p",null,"必须 Ubuntu + Nvidia GPU 环境")],-1),u={href:"https://docs.nvidia.com/deeplearning/tensorrt/install-guide/index.html#installing-tar",target:"_blank",rel:"noopener noreferrer"},v={href:"https://developer.nvidia.cn/login",target:"_blank",rel:"noopener noreferrer"},_={href:"https://developer.nvidia.com/cuda-toolkit-archive",target:"_blank",rel:"noopener noreferrer"},b=n("code",null,"deb(local)",-1),m=n("strong",null,"注意",-1),h={href:"https://developer.nvidia.com/cuda-10.2-download-archive",target:"_blank",rel:"noopener noreferrer"},k={href:"https://developer.nvidia.com/cuda-11-4-0-download-archive",target:"_blank",rel:"noopener noreferrer"},g={href:"https://developer.nvidia.com/rdp/cudnn-archive",target:"_blank",rel:"noopener noreferrer"},f=n("strong",null,"CUDA 版本",-1),x=n("strong",null,"系统架构",-1),T=n("strong",null,"Tar",-1),A=n("strong",null,"注意",-1),D={href:"https://developer.nvidia.com/compute/machine-learning/cudnn/secure/8.2.1.32/11.3_06072021/cudnn-11.3-linux-x64-v8.2.1.32.tgz",target:"_blank",rel:"noopener noreferrer"},N={href:"https://developer.nvidia.com/downloads/compute/cudnn/secure/8.9.0/local_installers/11.8/cudnn-linux-x86_64-8.9.0.131_cuda11-archive.tar.xz/",target:"_blank",rel:"noopener noreferrer"},R=t('<p>下载后得到压缩包 <code>cudnn-${version}.tar.xz</code> ，将压缩包解压后得到同名的目录，但是8.2.1 解压后得到的是 cuda 目录，建议改名</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xf</span> cudnn-<span class="token variable">${version}</span>.tar.xz\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',2),U={href:"https://developer.nvidia.com/tensorrt-getting-started",target:"_blank",rel:"noopener noreferrer"},C=n("em",null,"Download Now",-1),H=n("strong",null,"注意",-1),E={href:"https://developer.nvidia.com/compute/machine-learning/tensorrt/secure/8.2.1/tars/tensorrt-8.2.1.8.linux.x86_64-gnu.cuda-11.4.cudnn8.2.tar.gz",target:"_blank",rel:"noopener noreferrer"},L=t('<p>下载后得到压缩包 <code>TensorRT-${version}.tar.gz</code> ，将压缩包解压后得到同名的目录</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token function">tar</span> <span class="token parameter variable">-xf</span> TensorRT-<span class="token variable">${version}</span>.tar.gz\n</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>',2),P=t(`<p>在系统环境变量中添加 CUDA, cuDNN,TensorRT 相关的路径(修改为真实路径<code>$xxx_HOME</code>)。添加完成后，<code>source ~/.bashrc</code> 使环境变量生效</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># ~/.bashrc</span>
<span class="token comment"># ------ CUDA ------</span>
<span class="token assign-left variable">CUDA_VERSION</span><span class="token operator">=</span><span class="token number">11.8</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">CUDA_HOME</span><span class="token operator">=</span>/usr/local/cuda-<span class="token variable">\${CUDA_VERSION}</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$CUDA_HOME</span>/bin
<span class="token builtin class-name">export</span> <span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span><span class="token variable">$LD_LIBRARY_PATH</span><span class="token builtin class-name">:</span><span class="token variable">$CUDA_HOME</span>/lib64
<span class="token comment"># ------ cuDNN 8.2.1 ------</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">CUDNN_HOME</span><span class="token operator">=</span>path/to/cudnn-<span class="token operator">&lt;</span>version<span class="token operator">&gt;</span> 
<span class="token builtin class-name">export</span> <span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span><span class="token variable">$LD_LIBRARY_PATH</span><span class="token builtin class-name">:</span><span class="token variable">$CUDNN_HOME</span>/lib64 <span class="token comment"># 新版本为 lib 目录，建议自己检查一下</span>
<span class="token comment"># ------ TensorRT 8.2.1 ------</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">TENSORRT_HOME</span><span class="token operator">=</span>path/to/TensorRT-<span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>
<span class="token builtin class-name">export</span> <span class="token assign-left variable">LD_LIBRARY_PATH</span><span class="token operator">=</span><span class="token variable">$LD_LIBRARY_PATH</span><span class="token builtin class-name">:</span><span class="token variable">$TENSORRT_HOMEN</span>/lib
<span class="token builtin class-name">export</span> <span class="token assign-left variable"><span class="token environment constant">PATH</span></span><span class="token operator">=</span><span class="token environment constant">$PATH</span><span class="token builtin class-name">:</span><span class="token variable">$TENSORRT_HOMEN</span>/bin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>安装 python相关环境</li></ol>`,3),$={href:"https://docs.nvidia.com/deeplearning/tensorrt/install-guide/index.html#installing-pip",target:"_blank",rel:"noopener noreferrer"},O={href:"https://docs.nvidia.com/deeplearning/tensorrt/install-guide/index.html#installing-pip",target:"_blank",rel:"noopener noreferrer"},I=n("code",null,"tensorrt",-1),M=t(`<div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token comment"># 根据 python 版本选择对应的 .whl 文件</span>
python3 <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> <span class="token variable">$TENSORRT_HOME</span>/python/tensorrt-<span class="token operator">&lt;</span>version<span class="token operator">&gt;</span>.whl
python3 <span class="token parameter variable">-m</span> pip <span class="token function">install</span> <span class="token parameter variable">--upgrade</span> pycuda<span class="token operator">&gt;=</span><span class="token number">2020.1</span> <span class="token comment"># 已写入 requirements.txt</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,1);function B(y,w){const a=l("ExternalLinkIcon");return r(),i("div",null,[p,d,n("ol",null,[n("li",null,[s("安装 CUDA、cuDNN、TensorRT，参考"),n("a",u,[s("官方文档"),e(a)]),s("，需要注册 "),n("a",v,[s("Nvidia 账号"),e(a)]),s("，并登陆")])]),n("ul",null,[n("li",null,[n("p",null,[s("进入"),n("a",_,[s("CUDA 下载页面"),e(a)]),s("并选择需要的版本，根据电脑的配置依次选择各项，最后选择 "),b,s("安装方式，将出现的命令依次复制到终端中执行。")]),n("p",null,[m,s(": JetPack 4.6.1 "),n("a",h,[s("CUDA 10.2"),e(a)]),s("，但是 10.2 不支持 Ubuntu20，所以下载 "),n("a",k,[s("CUDA 11.4"),e(a)])])]),n("li",null,[n("p",null,[s("进入"),n("a",g,[s("cuDNN 下载页面"),e(a)]),s("，根据 "),f,s("和"),x,s("选择对应的版本的 "),T,s("文件。")]),n("p",null,[A,s(": JetPack 4.6.1 为 cuDNN v8.2.1, CUDA 10.2，但是由于之前安装了 CUDA 11.4，所以需要下载 "),n("a",D,[s('"cuDNN v8.2.1 for CUDA 11.x / for Linux (x86_64)(Tar)"'),e(a)]),s("。建议下载最新版本便于开发 "),n("a",N,[s('"cuDNN8.9.0 + CUDA 11.8 + Linux x86_64 (Tar)"'),e(a)]),s("，")]),R]),n("li",null,[n("p",null,[s("下载 "),n("a",U,[s("TensorRT"),e(a)]),s("，进入下载页面，点击 "),C,s(" 的入口，选择版本的 Tar 文件下载。")]),n("p",null,[H,s(": JetPack 4.6.1 中 TensorRT 版本为 8.2.1，所以需要安装对应的版本 "),n("a",E,[s('"TensorRT 8.2 GA for Linux x86_64 and CUDA 11.0-5 TAR Package"'),e(a)])]),L])]),P,n("p",null,[s("参考官方文档 "),n("a",$,[s('"Python Package Index Installation"'),e(a)]),s(" 安装 python 的"),n("a",O,[I,e(a)])]),M])}const S=o(c,[["render",B],["__file","install.html.vue"]]);export{S as default};
